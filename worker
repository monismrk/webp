addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const url = new URL(request.url);
  const match = url.hostname.match(/^([^.]+)\.webp\.page$/);
  if (match) {
    const subdir = match[1];
    url.hostname = 'webp.page';
    url.pathname = `/${subdir}${url.pathname}`;
    
    // Fetch content from the subdirectory, but the browser URL stays as the subdomain
    const response = await fetch(url.toString(), {
      method: request.method,
      headers: request.headers,
      body: request.body,
      redirect: 'manual'
    });

    // Clone the response and return it
    return new Response(response.body, response);
  }
  return fetch(request);
}
